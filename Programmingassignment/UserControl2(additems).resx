<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAA7dJREFUaEPt
        mrtqVFEYhYM2gp0ySYgoKSwEISm1sLD2DbTKS3h7FyG9N3wDCy1NZiYhlWASL1iIYjSdkO3/Z9bBf85Z
        +8yaG8zg+eCDmL322nvnZCcZxoWGhoaGhnlnJb27spg6L8xvZpoxfU8vW2nrKrY7Hn7YpdT5UVpk5vQ9
        Xki7l7Ht0bEyf7J0kdmz/QzbHh0r+lUtnll/YtujQ0pnWmx7dFjpLIttj8ZSat9jpeYbRPrAT3OWH7gR
        Nse9mLo3EOnDxt6Ws+5S6t5FZDiWU+e6FRyXC93l1L6NWB+t1N5geReRLGyO20qdJ4j04XtgefPY946Y
        hn2VztvEvVLRqbaB14hVsPHNcr4QkSxsDnyPSAXfC8m7e34GxAZjE7Ibzz1dx8b3y/lCRLKwOa4d6g8i
        FWqesruJWD1135Z1T9cWX2VzChHLwuYUrqTOLcQq1Dxl2297AzFO3b11655u3RfKRSwLm1Noh6L32Bnw
        lPP3ue7eunVP17FM9hq4iGVhc4LZe+zUPWWT32cbqN1w3dN1LJO9vy5iWdicQjtQ9h47A56yW73P9snf
        pVD0CLEslhl3/klpTrB7glgWyw23vpW+IkE4+I/yCcz/yuee+gmxLEOvfzHtXMu8DPyuvOwad34r7dyx
        bOUp27fzSe6vrchI64cX+v4K6ch8PsxrzHHnX0pbN+1pfLF5dvCuH/6zctiCcddv+H9I6cxCenoW/6ri
        Y1Mftz3kGDSusJr2zy2m3TW7Uw/sLnywO3VoP0AeLabtdR/rjW+v2+ce2rj/Dj7ofUzHDzzT+3h3bchx
        W7N76OO9vZTHu48t89HGbY/t+8U4jqFjBeWfdnMljqHDSuZJHEOHlcyTOIYOK5kncQwdVjJP4hg6rGSe
        xDF0WEkUMRnWEUVMhnVEEdNhJVHEZFhHFDEZ1hFFTIeVRBGTYR1RxGRYRxQxHVYSRUyGdUQRk2EdUcR0
        WEkUMRnWEUVMhnVEEdNhJVHEZFhHFDEZ1hFFTIeVRBGTYR1RxGRYRxQxHVYSRUyGdUQRk2EdUcR0WEkU
        MRnWEUVMhnVEEdNhJVHEZFhHFDEZ1hFFTIeVRBGTYR1RxGRYRxQxHVYSRUyGdUQRk2EdUcR0WMk0xbIy
        rCOKmA4rmaZYVoZ1RBHTYSXTFMvKsI4oYjqsZJpiWRnWEUVMxybVvRs3cbGsDOsIDny3skL9u3GTF8vK
        sI5/jvBfEGvejZuKWFaGdUDp3UpK6d04Vj4xsaQM6WjeLWxoaGiYcxYW/gLaXTF5DqrLXgAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>